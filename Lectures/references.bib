@misc{choppIntroduction,
  title = {Introduction to {{High Performance Scientific Computing}}},
  author = {Chopp, David L.},
  journal = {Software, Environments, and Tools},
  url = {https://epubs.siam.org/doi/book/10.1137/1.9781611975642},
  urldate = {2025-01-13},
  langid = {english},
  file = {/home/blegat/Zotero/storage/7T4C28QS/Chopp - Introduction to High Performance Scientific Comput.pdf}
}

@book{eijkhout2010Introduction,
  title = {Introduction to {{High Performance Scientific Computing}}},
  author = {Eijkhout, Victor},
  year = {2010},
  publisher = {Lulu.com},
  abstract = {This is a textbook that teaches the bridging topics between numerical analysis, parallel computing, code performance, large scale applications.},
  googlebooks = {oeGEAwAAQBAJ},
  isbn = {978-1-257-99254-6},
  langid = {english},
  keywords = {Computers / General},
  file = {/home/blegat/Downloads/EijkhoutIntroToHPC.pdf}
}

@book{eijkhout2017Parallel,
  title = {Parallel {{Programming}} in {{MPI}} and {{OpenMP}}},
  author = {Eijkhout, Victor},
  year = {2017},
  month = nov,
  publisher = {Lulu.com},
  abstract = {This is a textbook about parallel programming of scientific application on large computers, using MPI and OpenMP.},
  googlebooks = {vzFBDwAAQBAJ},
  isbn = {978-1-387-40028-7},
  langid = {english},
  keywords = {Computers / General},
  file = {/home/blegat/git/UCLouvain/LINMA2710/TheArtofHPC_pdfs/vol2/EijkhoutParallelProgramming.pdf}
}

@misc{gramaIntroduction,
  title = {Introduction to {{Parallel Computing}}},
  author = {Grama, Ananth and Gupta, Anshul and Karypis, George and Kumar, Vipin},
  url = {https://www.oreilly.com/library/view/introduction-to-parallel/0201648652/},
  urldate = {2025-01-13},
  abstract = {Introducation to Parallel Computing is a complete end-to-end source of information on almost all aspects of parallel computing from introduction to architectures to programming paradigms to algorithms to programming standards. â€¦ - Selection from Introduction to Parallel Computing, Second Edition [Book]},
  langid = {english}
}

@book{quinn1994Parallel,
  title = {Parallel {{Computing}}: {{Theory}} and {{Practice}}},
  shorttitle = {Parallel {{Computing}}},
  author = {Quinn, Michael Jay},
  year = {1994},
  publisher = {McGraw-Hill},
  abstract = {This book is approapriate for undergraduate courses in parallel processing and parallel computing, offered in Computer Science or Computer Engineering departments. Prerequisites include computer architecture and analysis of algorithms. This book familiarizes readers with classical results in the theory of parallel computing and explains reasons behind the growth of parallel computing, as well as obstacles that limit the effectiveness of parallelism. The text also discusses problems encountered when implementing parallel algorithms on real parallel computers, developing eight practical algorithm design strategies. Chapters on parallel algorithms are organized according to problem domain and separate chapters discuss matrix multiplications, the fast Fourier transform, solving systems of linear equations and combinatorial algorithms.},
  googlebooks = {nm2OQgAACAAJ},
  isbn = {978-0-07-113800-0},
  langid = {english},
  keywords = {Computers / Distributed Systems / General,Computers / Programming / General}
}

@article{wang2011Power,
  title = {Power Gating Strategies on {{GPUs}}},
  author = {Wang, Po-Han and Yang, Chia-Lin and Chen, Yen-Ming and Cheng, Yu-Jung},
  year = {2011},
  month = oct,
  journal = {ACM Trans. Archit. Code Optim.},
  volume = {8},
  number = {3},
  pages = {13:1--13:25},
  issn = {1544-3566},
  doi = {10.1145/2019608.2019612},
  url = {https://dl.acm.org/doi/10.1145/2019608.2019612},
  abstract = {As technology continues to shrink, reducing leakage is critical to achieving energy efficiency. Previous studies on low-power GPUs (Graphics Processing Units) focused on techniques for dynamic power reduction, such as DVFS (Dynamic Voltage and Frequency Scaling) and clock gating. In this paper, we explore the potential of adopting architecture-level power gating techniques for leakage reduction on GPUs. We propose three strategies for applying power gating on different modules in GPUs. The Predictive Shader Shutdown technique exploits workload variation across frames to eliminate leakage in shader clusters. Deferred Geometry Pipeline seeks to minimize leakage in fixed-function geometry units by utilizing an imbalance between geometry and fragment computation across batches. Finally, the simple time-out power gating method is applied to nonshader execution units to exploit a finer granularity of the idle time. Our results indicate that Predictive Shader Shutdown eliminates up to 60\% of the leakage in shader clusters, Deferred Geometry Pipeline removes up to 57\% of the leakage in the fixed-function geometry units, and the simple time-out power gating mechanism eliminates 83.3\% of the leakage in nonshader execution units on average. All three schemes incur negligible performance degradation, less than 1\%.},
  file = {/home/blegat/Zotero/storage/99RU4G9G/Wang et al. - 2011 - Power gating strategies on GPUs.pdf}
}

@inproceedings{you2023Zeus,
  title = {Zeus: {{Understanding}} and {{Optimizing GPU Energy Consumption}} of {{DNN Training}}},
  shorttitle = {Zeus},
  booktitle = {20th {{USENIX Symposium}} on {{Networked Systems Design}} and {{Implementation}} ({{NSDI}} 23)},
  author = {You, Jie and Chung, Jae-Won and Chowdhury, Mosharaf},
  year = {2023},
  pages = {119--139},
  url = {https://www.usenix.org/conference/nsdi23/presentation/you},
  isbn = {978-1-939133-33-5},
  langid = {english},
  file = {/home/blegat/Zotero/storage/B8F54RA7/You et al. - 2023 - Zeus Understanding and Optimizing GPU Energy Consumption of DNN Training.pdf}
}

# Copy-pasted from https://github.com/JuliaPluto/static-export-template
name: Export Pluto notebooks
on:
    push:
        branches:
            - main
            - master
    pull_request:
        types: [opened, synchronize, reopened]
    workflow_dispatch:

# When two jobs run in parallel, cancel the older ones, to make sure that the website is generated from the most recent commit.
concurrency:
    group: pluto-export
    cancel-in-progress: true

# This action needs permission to write the exported HTML file to the gh-pages branch.
permissions:
    contents: write
    # (all other permission fields default to "none")

jobs:
    build-and-deploy:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout this repository
              uses: actions/checkout@v4

            - name: Install Julia
              uses: julia-actions/setup-julia@v2
              with:
                  version: "1" # This will automatically pick the latest Julia version

            - name: Cache Julia artifacts & such
              uses: julia-actions/cache@v2
              with:
                cache-registries: "true"
                cache-scratchspaces: "false"

            # We set up a folder that Pluto can use to cache exported notebooks. If the notebook file did not change, then Pluto can take the exported file from cache instead of running the notebook.
            - name: Set up notebook state cache
              uses: actions/cache@v4
              with:
                  path: pluto_state_cache
                  key: ${{ runner.os }}-pluto_state_cache-v2-${{ hashFiles('**/Project.toml', '**/Manifest.toml', '.github/workflows/*' ) }}-${{ hashFiles('**/*jl') }}
                  restore-keys: |
                      ${{ runner.os }}-pluto_state_cache-v2-${{ hashFiles('**/Project.toml', '**/Manifest.toml', '.github/workflows/*' ) }}

            - name: Ignore notebook state cache in export
              run: echo 'pluto_state_cache' >> .gitignore

            - name: Install OpenMP, OpenMPI and hwloc
              shell: bash {0}
              run: |
                sudo apt-get install -y hwloc # For lstopo
                sudo apt-get install -y openmpi-bin libopenmpi-dev
                sudo apt-get install -y libomp-dev

            - name: Instantiate
              run: |
                julia -e 'using Pkg
                  Pkg.activate("Lectures")
                  Pkg.precompile()'

            - name: Pdf exports
              run: | # We don't `Pkg.precompile()` because PlutoPDF might need a Pkg.build after instantiate, see https://github.com/JuliaPluto/PlutoPDF.jl/issues/28#issuecomment-2743155289
                julia -e 'using Pkg
                  Pkg.activate("pluto-slider-server")
                  Pkg.instantiate()
                  include("pluto-slider-server/generate_pdf.jl")'

            - name: Run & export Pluto notebooks
              run: |
                julia -e 'using Pkg
                  Pkg.activate("pluto-slider-server")
                  Pkg.instantiate()

                  import PlutoSliderServer

                  PlutoSliderServer.github_action(".";
                    Export_cache_dir="pluto_state_cache",
                    Export_baked_notebookfile=false,
                    Export_baked_state=false,
                    # more parameters can go here
                  )'

            - name: Deploy to gh-pages
              uses: JamesIves/github-pages-deploy-action@releases/v4
              if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
              with:
                  token: ${{ secrets.GITHUB_TOKEN }}
                  branch: gh-pages
                  folder: .
                  single-commit: true
